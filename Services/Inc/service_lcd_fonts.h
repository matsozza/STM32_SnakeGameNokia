/**
 * LCD High Level Services - Fonts
 * service_lcd_fonts.h
 *
 * Designed to work with NOKIA 5110 display via SPI
 *
 *
 *  Created on: May 08, 2022
 *      Author: Matheus Sozza (based on GitHub @baghayi/Nokia_5110)
 */

#ifndef INC_CORE_SERVICES_LCD_FONTS_H_
#define INC_CORE_SERVICES_LCD_FONTS_H_

/* Includes ------------------------------------------------------------------*/
#include "cmsis_os.h"

/* Defines -------------------------------------------------------------------*/
#define LCD_ASCII_DICTIONARY { \
	{'?', 0x3f, {0x2, 0x1, 0x51, 0x9, 0x6}, 5}, \
	{'A', 0x41, {0x7c, 0x12, 0x11, 0x12, 0x7c}, 5}, \
	{'B', 0x42, {0x7F, 0x49, 0x49, 0x49, 0x36}, 5}, \
	{'C', 0x43, {0x3e, 0x41, 0x41, 0x41, 0x22}, 5}, \
	{'D', 0x44, {0x7f, 0x41, 0x41, 0x41, 0x3e}, 5}, \
	{'E', 0x45, {0x7f, 0x49, 0x49, 0x49, 0x41}, 5}, \
	{'F', 0x46, {0x7f, 0x9, 0x9, 0x9, 0x1}, 5},\
	{'G', 0x47, {0x3e, 0x41, 0x49, 0x49, 0x3a}, 5}, \
	{'H', 0x48, {0x7f, 0x8, 0x8, 0x8, 0x7f}, 5}, \
	{'I', 0x49, {0x00, 0x41, 0x7f, 0x41, 0x00}, 5}, \
	{'J', 0x4a, {0x30, 0x40, 0x40, 0x40, 0x3f}, 5}, \
	{'K', 0x4b, {0x7f, 0x8, 0x8, 0x14, 0x63}, 5}, \
	{'L', 0x4c, {0x7f, 0x40, 0x40, 0x40, 0x40}, 5}, \
	{'M', 0x4d, {0x7f, 0x6, 0xc, 0x6, 0x7f}, 5}, \
	{'N', 0x4e, {0x7f, 0x4, 0x8, 0x10, 0x7f}, 5},\
	{'O', 0x4f, {0x3e, 0x41, 0x41, 0x41, 0x3e}, 5},\
	{'P', 0x50, {0x7f, 0x9, 0x9, 0x9, 0x6}, 5},\
	{'Q', 0x51, {0x3e, 0x41, 0x51, 0x61, 0x7e}, 5},\
	{'R', 0x52, {0x7f, 0x9, 0x19, 0x29, 0x46}, 5},\
	{'S', 0x53, {0x26, 0x49, 0x49, 0x49, 0x32}, 5},\
	{'T', 0x54, {0x1, 0x1, 0x7f, 0x1, 0x1}, 5},\
	{'U', 0x55, {0x3f, 0x40, 0x40, 0x40, 0x3f}, 5},\
	{'V', 0x56, {0x1f, 0x20, 0x40, 0x20, 0x1f}, 5},\
	{'W', 0x57, {0x3f, 0x40, 0x38, 0x40, 0x3f}, 5},\
	{'X', 0x58, {0x63, 0x14, 0x8, 0x14, 0x63}, 5},\
	{'Y', 0x59, {0x7, 0x8, 0x70, 0x8, 0x7}, 5},\
	{'Z', 0x5a, {0x61, 0x51, 0x49, 0x45, 0x43}, 5},\
	{'-', 0x2d, {0x8, 0x8, 0x8, 0x8, 0x8}, 5},\
	{'!', 0x21 ,{0x00, 0x00, 0x5f, 0x00, 0x00}, 5},\
	{'.', 0x2e, {0x0, 0x40, 0x0}, 3},\
	{'1', 0x31, {0x42, 0x42, 0x7f, 0x40, 0x40}, 5},\
	{'2', 0x32, {0x62, 0x51, 0x49, 0x45, 0x42}, 5},\
	{'3', 0x33, {0x22, 0x41, 0x49, 0x49, 0x3e}, 5},\
	{'4', 0x34, {0x1f, 0x10, 0x7c, 0x10, 0x10}, 5},\
	{'5', 0x35, {0x4f, 0x49, 0x49, 0x49, 0x31}, 5},\
	{'6', 0x36, {0x3e, 0x49, 0x49, 0x49, 0x32}, 5},\
	{'7', 0x37, {0x1, 0x1, 0x79, 0x5, 0x3}, 5},\
	{'8', 0x38, {0x36, 0x49, 0x49, 0x49, 0x36}, 5},\
	{'9', 0x39, {0x26, 0x49, 0x49, 0x49, 0x3e}, 5},\
	{'0', 0x30, {0x3e, 0x41, 0x41, 0x41, 0x3e}, 5},\
	{'+', 0x2b, {0x8, 0x8, 0x3e, 0x8, 0x8}, 5},\
	{':', 0x3a, {0x0, 0x28, 0x0}, 3},\
	{'=', 0x3d, {0x14, 0x14, 0x14, 0x14, 0x14}, 5},\
	{' ', 0x20, {0x0, 0x0}, 2},\
	{'a', 0x61, {0x20, 0x54, 0x54, 0x54, 0x78}, 5},\
	{'b', 0x62, {0x7f, 0x48, 0x48, 0x48, 0x30}, 5},\
	{'c', 0x63, {0x38, 0x44, 0x44, 0x44, 0x28}, 5},\
	{'d', 0x64, {0x20, 0x50, 0x50, 0x50, 0x7f}, 5},\
	{'e', 0x65, {0x38, 0x54, 0x54, 0x54, 0x48}, 5},\
	{'f', 0x66, {0x8, 0x7e, 0x9, 0x1, 0x2}, 5},\
	{'g', 0x67, {0x48, 0x54, 0x54, 0x54, 0x38}, 5},\
	{'h', 0x68, {0x7f, 0x8, 0x8, 0x8, 0x70}, 5},\
	{'i', 0x69, {0x40, 0x44, 0x7d, 0x40, 0x40}, 5},\
	{'j', 0x6a, {0x20, 0x40, 0x44, 0x3d, 0x00}, 5},\
	{'k', 0x6b, {0x7f, 0x10, 0x10, 0x28, 0x44}, 5},\
	{'l', 0x6c, {0x01, 0x01, 0x7f, 0x40, 0x40}, 5},\
	{'m', 0x6d, {0x7c, 0x4, 0x7c, 0x4, 0x78}, 5},\
	{'n', 0x6e, {0x7c, 0x4, 0x4, 0x4, 0x78}, 5},\
	{'o', 0x6f, {0x38, 0x44, 0x44, 0x44, 0x38}, 5},\
	{'p', 0x70, {0x7c, 0x14, 0x14, 0x14, 0x8}, 5},\
	{'q', 0x71, {0x8, 0x14, 0x14, 0x14, 0x7c}, 5},\
	{'r', 0x72, {0x7c, 0x8, 0x4, 0x4, 0x4}, 5},\
	{'s', 0x73, {0x48, 0x54, 0x54, 0x54, 0x24}, 5},\
	{'t', 0x74, {0x02, 0x2, 0x3f, 0x42, 0x42}, 5},\
	{'u', 0x75, {0x3c, 0x40, 0x40, 0x20, 0x7c}, 5},\
	{'v', 0x76, {0x1c, 0x20, 0x40, 0x20, 0x1c}, 5},\
	{'w', 0x77, {0x7c, 0x20, 0x70, 0x20, 0x7c}, 5},\
	{'x', 0x78, {0x44, 0x28, 0x10, 0x28, 0x44}, 5},\
	{'y', 0x79, {0x4c, 0x50, 0x50, 0x50, 0x3c}, 5},\
	{'z', 0x7a, {0x44, 0x64, 0x54, 0x4c, 0x44}, 5},\
	{'[', 0x5b, {0x0, 0x7f, 0x41, 0x41, 0x0}, 5},\
	{']', 0x5d, {0x0, 0x41, 0x41, 0x7f, 0x0}, 5},\
	{'{', 0x7b, {0x8, 0x8, 0x36, 0x41, 0x41}, 5},\
	{'}', 0x7d, {0x41, 0x41, 0x36, 0x8, 0x8}, 5},\
	{'(', 0x28, {0x0, 0x1c, 0x22, 0x41, 0x0}, 5},\
	{')', 0x29, {0x0, 0x41, 0x22, 0x1c, 0x0}, 5},\
	{'@', 0x40, {0x3e, 0x41, 0x5d, 0x55, 0x1e}, 5},\
	{'#', 0x23, {0x14, 0x3e, 0x14, 0x3e, 0x14}, 5},\
	{'$', 0x24, {0x2c, 0x2a, 0x7f, 0x2a, 0x12}, 5},\
	{'%', 0x25, {0x26, 0x16, 0x8, 0x34, 0x32}, 5},\
	{'^', 0x5e, {0x4, 0x2, 0x1, 0x2, 0x4}, 5},\
	{'_', 0x5f, {0x40, 0x40, 0x40, 0x40, 0x40}, 5},\
	{'\'', 0x27, {0x7}, 1},\
	{'"', 0x22, {0x0, 0x7, 0x0, 0x7, 0x0}, 5},\
	{';', 0x3b, {0x0, 0x40, 0x76, 0x36, 0x0}, 5},\
	{'/', 0x2f, {0x20, 0x10, 0x8, 0x4, 0x2}, 5},\
	{'\\', 0x5c, {0x2, 0x4, 0x8, 0x10, 0x20}, 5},\
	{'<', 0x3c, {0x0, 0x10, 0x28, 0x44, 0x0}, 5},\
	{'>', 0x3e, {0x0, 0x44, 0x28, 0x10, 0x0}, 5},\
	{'*', 0x2a, {0x12, 0xc, 0x3f, 0xc, 0x12}, 5},\
	{'`', 0x60, {0x1, 0x2}, 2},\
	{'~', 0x7e, {0x2, 0x1, 0x3, 0x2, 0x1}, 5},\
	{'&', 0x26, {0x30, 0x4a, 0x45, 0x2a, 0x10, 0x28}, 6},\
	{'\n', 0x0a, {}, 0},\
	{'\r', 0x0d, {}, 0}\
};\



/* Typedef declare -----------------------------------------------------------*/
typedef struct  {
    char ASCII_Char;
    uint8_t ASCII_Code;
    uint8_t bitmap[6];
	uint8_t bitmap_total_bytes;
} LCD_Char_t;

/* Constants Declare ---------------------------------------------------------*/


/* Function prototypes -------------------------------------------------------*/
LCD_Char_t findCorrespondingByte(uint8_t ASCII_Code);
LCD_Char_t findCorrespondingChar(char ASCII_Char);

/*
LCD_Char_t findCorrespondingByte(uint8_t ASCII_Code)
{
	uint8_t total_characters = sizeof(ASCII_Library) / sizeof(*ASCII_Library);
	for (uint8_t i = 0; i < total_characters; i++)
	{
		if (ASCII_Library[i].ASCII_Code == ASCII_Code)
			return ASCII_Library[i];
	}
	return ASCII_Library[0];
}

LCD_Char_t findCorrespondingChar(char ASCII_Char)
{
	uint8_t total_characters = sizeof(ASCII_Library) / sizeof(*ASCII_Library);
	for (uint8_t i = 0; i < total_characters; i++)
	{
		if (ASCII_Library[i].ASCII_Char == ASCII_Char)
			return ASCII_Library[i];
	}
	return ASCII_Library[0];
}
*/
#endif /* INC_CORE_SERVICES_LCD_FONTS_H_ */




